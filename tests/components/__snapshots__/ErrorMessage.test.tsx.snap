// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ErrorMessage/> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ErrorMessage
    clearError={[MockFunction]}
    message="hello"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          aria-hidden="true"
          className="glyphicon glyphicon-exclamation-sign"
          style={
            Object {
              "paddingRight": "5px",
            }
          }
        />,
        <span
          className="sr-only"
        >
          Error:
        </span>,
        <span
          className="pull-right clickable"
        >
          <button
            className="error-close btn btn-default"
            onClick={[MockFunction]}
            type="button"
          >
            <span
              className="glyphicon glyphicon-remove"
            />
          </button>
        </span>,
        "hello",
      ],
      "className": "alert alert-danger",
      "role": "alert",
      "style": Object {
        "marginBottom": "0px",
        "padding": "8px 15px",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "aria-hidden": "true",
          "className": "glyphicon glyphicon-exclamation-sign",
          "style": Object {
            "paddingRight": "5px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Error:",
          "className": "sr-only",
        },
        "ref": null,
        "rendered": "Error:",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="error-close btn btn-default"
            onClick={[MockFunction]}
            type="button"
          >
            <span
              className="glyphicon glyphicon-remove"
            />
          </button>,
          "className": "pull-right clickable",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="glyphicon glyphicon-remove"
            />,
            "className": "error-close btn btn-default",
            "onClick": [MockFunction],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "glyphicon glyphicon-remove",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          "type": "button",
        },
        "type": "span",
      },
      "hello",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            aria-hidden="true"
            className="glyphicon glyphicon-exclamation-sign"
            style={
              Object {
                "paddingRight": "5px",
              }
            }
          />,
          <span
            className="sr-only"
          >
            Error:
          </span>,
          <span
            className="pull-right clickable"
          >
            <button
              className="error-close btn btn-default"
              onClick={[MockFunction]}
              type="button"
            >
              <span
                className="glyphicon glyphicon-remove"
              />
            </button>
          </span>,
          "hello",
        ],
        "className": "alert alert-danger",
        "role": "alert",
        "style": Object {
          "marginBottom": "0px",
          "padding": "8px 15px",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-hidden": "true",
            "className": "glyphicon glyphicon-exclamation-sign",
            "style": Object {
              "paddingRight": "5px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Error:",
            "className": "sr-only",
          },
          "ref": null,
          "rendered": "Error:",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="error-close btn btn-default"
              onClick={[MockFunction]}
              type="button"
            >
              <span
                className="glyphicon glyphicon-remove"
              />
            </button>,
            "className": "pull-right clickable",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="glyphicon glyphicon-remove"
              />,
              "className": "error-close btn btn-default",
              "onClick": [MockFunction],
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "glyphicon glyphicon-remove",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
            "type": "button",
          },
          "type": "span",
        },
        "hello",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
