// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SettingsModal/> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SettingsModal
    handleChangeDelay={[MockFunction]}
    handleCloseSettingsModal={[MockFunction]}
    handleToggleNotification={[MockFunction]}
    handleToggleSound={[MockFunction]}
    permission="allowed"
    settings={
      Object {
        "delay": 5,
        "notification": true,
        "sound": true,
      }
    }
    showModal={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Modal
        animation={true}
        autoFocus={true}
        backdrop={true}
        bsClass="modal"
        dialogComponentClass={[Function]}
        enforceFocus={true}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onHide={[MockFunction]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={true}
      >
        <ModalHeader
          bsClass="modal-header"
          closeButton={true}
          closeLabel="Close"
        >
          <ModalTitle
            bsClass="modal-title"
            componentClass="h4"
          >
            Settings
          </ModalTitle>
        </ModalHeader>
        <ModalBody
          bsClass="modal-body"
          componentClass="div"
        >
          <FormGroup
            bsClass="form-group"
          >
            <Checkbox
              bsClass="checkbox"
              checked={true}
              disabled={false}
              inline={false}
              onChange={[MockFunction]}
              title=""
            >
              Toggle Sound
            </Checkbox>
             
            
             Delay  
            <input
              min={5}
              onChange={[MockFunction]}
              type="number"
              value={5}
            />
             s
          </FormGroup>
        </ModalBody>
      </Modal>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animation": true,
        "autoFocus": true,
        "backdrop": true,
        "bsClass": "modal",
        "children": Array [
          <ModalHeader
            bsClass="modal-header"
            closeButton={true}
            closeLabel="Close"
          >
            <ModalTitle
              bsClass="modal-title"
              componentClass="h4"
            >
              Settings
            </ModalTitle>
          </ModalHeader>,
          <ModalBody
            bsClass="modal-body"
            componentClass="div"
          >
            <FormGroup
              bsClass="form-group"
            >
              <Checkbox
                bsClass="checkbox"
                checked={true}
                disabled={false}
                inline={false}
                onChange={[MockFunction]}
                title=""
              >
                Toggle Sound
              </Checkbox>
               
              
               Delay  
              <input
                min={5}
                onChange={[MockFunction]}
                type="number"
                value={5}
              />
               s
            </FormGroup>
          </ModalBody>,
        ],
        "dialogComponentClass": [Function],
        "enforceFocus": true,
        "keyboard": true,
        "manager": ModalManager {
          "add": [Function],
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "isTopModal": [Function],
          "modals": Array [],
          "remove": [Function],
        },
        "onHide": [MockFunction],
        "renderBackdrop": [Function],
        "restoreFocus": true,
        "show": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-header",
            "children": <ModalTitle
              bsClass="modal-title"
              componentClass="h4"
            >
              Settings
            </ModalTitle>,
            "closeButton": true,
            "closeLabel": "Close",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-title",
              "children": "Settings",
              "componentClass": "h4",
            },
            "ref": null,
            "rendered": "Settings",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-body",
            "children": <FormGroup
              bsClass="form-group"
            >
              <Checkbox
                bsClass="checkbox"
                checked={true}
                disabled={false}
                inline={false}
                onChange={[MockFunction]}
                title=""
              >
                Toggle Sound
              </Checkbox>
               
              
               Delay  
              <input
                min={5}
                onChange={[MockFunction]}
                type="number"
                value={5}
              />
               s
            </FormGroup>,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "form-group",
              "children": Array [
                <Checkbox
                  bsClass="checkbox"
                  checked={true}
                  disabled={false}
                  inline={false}
                  onChange={[MockFunction]}
                  title=""
                >
                  Toggle Sound
                </Checkbox>,
                " ",
                "",
                " Delay  ",
                <input
                  min={5}
                  onChange={[MockFunction]}
                  type="number"
                  value={5}
                />,
                " s",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "checkbox",
                  "checked": true,
                  "children": "Toggle Sound",
                  "disabled": false,
                  "inline": false,
                  "onChange": [MockFunction],
                  "title": "",
                },
                "ref": null,
                "rendered": "Toggle Sound",
                "type": [Function],
              },
              " ",
              "",
              " Delay  ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "min": 5,
                  "onChange": [MockFunction],
                  "type": "number",
                  "value": 5,
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              " s",
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Modal
          animation={true}
          autoFocus={true}
          backdrop={true}
          bsClass="modal"
          dialogComponentClass={[Function]}
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onHide={[MockFunction]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={true}
        >
          <ModalHeader
            bsClass="modal-header"
            closeButton={true}
            closeLabel="Close"
          >
            <ModalTitle
              bsClass="modal-title"
              componentClass="h4"
            >
              Settings
            </ModalTitle>
          </ModalHeader>
          <ModalBody
            bsClass="modal-body"
            componentClass="div"
          >
            <FormGroup
              bsClass="form-group"
            >
              <Checkbox
                bsClass="checkbox"
                checked={true}
                disabled={false}
                inline={false}
                onChange={[MockFunction]}
                title=""
              >
                Toggle Sound
              </Checkbox>
               
              
               Delay  
              <input
                min={5}
                onChange={[MockFunction]}
                type="number"
                value={5}
              />
               s
            </FormGroup>
          </ModalBody>
        </Modal>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animation": true,
          "autoFocus": true,
          "backdrop": true,
          "bsClass": "modal",
          "children": Array [
            <ModalHeader
              bsClass="modal-header"
              closeButton={true}
              closeLabel="Close"
            >
              <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
              >
                Settings
              </ModalTitle>
            </ModalHeader>,
            <ModalBody
              bsClass="modal-body"
              componentClass="div"
            >
              <FormGroup
                bsClass="form-group"
              >
                <Checkbox
                  bsClass="checkbox"
                  checked={true}
                  disabled={false}
                  inline={false}
                  onChange={[MockFunction]}
                  title=""
                >
                  Toggle Sound
                </Checkbox>
                 
                
                 Delay  
                <input
                  min={5}
                  onChange={[MockFunction]}
                  type="number"
                  value={5}
                />
                 s
              </FormGroup>
            </ModalBody>,
          ],
          "dialogComponentClass": [Function],
          "enforceFocus": true,
          "keyboard": true,
          "manager": ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          },
          "onHide": [MockFunction],
          "renderBackdrop": [Function],
          "restoreFocus": true,
          "show": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-header",
              "children": <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
              >
                Settings
              </ModalTitle>,
              "closeButton": true,
              "closeLabel": "Close",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-title",
                "children": "Settings",
                "componentClass": "h4",
              },
              "ref": null,
              "rendered": "Settings",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-body",
              "children": <FormGroup
                bsClass="form-group"
              >
                <Checkbox
                  bsClass="checkbox"
                  checked={true}
                  disabled={false}
                  inline={false}
                  onChange={[MockFunction]}
                  title=""
                >
                  Toggle Sound
                </Checkbox>
                 
                
                 Delay  
                <input
                  min={5}
                  onChange={[MockFunction]}
                  type="number"
                  value={5}
                />
                 s
              </FormGroup>,
              "componentClass": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form-group",
                "children": Array [
                  <Checkbox
                    bsClass="checkbox"
                    checked={true}
                    disabled={false}
                    inline={false}
                    onChange={[MockFunction]}
                    title=""
                  >
                    Toggle Sound
                  </Checkbox>,
                  " ",
                  "",
                  " Delay  ",
                  <input
                    min={5}
                    onChange={[MockFunction]}
                    type="number"
                    value={5}
                  />,
                  " s",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "checkbox",
                    "checked": true,
                    "children": "Toggle Sound",
                    "disabled": false,
                    "inline": false,
                    "onChange": [MockFunction],
                    "title": "",
                  },
                  "ref": null,
                  "rendered": "Toggle Sound",
                  "type": [Function],
                },
                " ",
                "",
                " Delay  ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "min": 5,
                    "onChange": [MockFunction],
                    "type": "number",
                    "value": 5,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                " s",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
