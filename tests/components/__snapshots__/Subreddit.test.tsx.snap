// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Subreddit/> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Subreddit
    callNotification={[MockFunction]}
    onReload={[MockFunction]}
    onRemove={[MockFunction]}
    playAudio={[MockFunction]}
    reddit={
      Object {
        "didInvalidate": false,
        "error": false,
        "hasNewPost": false,
        "isFetching": false,
        "items": Array [],
        "lastUpdated": 0,
      }
    }
    settings={
      Object {
        "delay": 5,
        "notification": false,
        "sound": false,
      }
    }
    title=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="panel-heading"
        >
          <h4
            className="panel-title"
          >
            <a
              id="title-a"
              onClick={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
            >
              
            </a>
          </h4>
          <span
            className="pull-right clickable"
          >
            <button
              className="btn btn-default"
              id="reload-button"
              onClick={[MockFunction]}
              type="button"
            >
              <span
                className="glyphicon glyphicon-refresh"
              />
            </button>
            <button
              className="btn btn-default"
              id="remove-button"
              onClick={[MockFunction]}
              type="button"
            >
              <span
                className="glyphicon glyphicon-remove"
              />
            </button>
          </span>
          <span
            className="time-span pull-right"
            id="last-fetched-span"
            style={
              Object {
                "marginRight": "5px",
              }
            }
          >
            Last fetched : 00:00:00
          </span>
          <span
            className="info-span pull-right"
            id="new-post-span"
          >
            
          </span>
        </div>,
        <div
          className="panel-collapse collapse "
          id="collapse-div"
        >
          <div
            className="panel-body"
            id="posts-div"
          />
        </div>,
      ],
      "className": "panel panel-default",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4
              className="panel-title"
            >
              <a
                id="title-a"
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                
              </a>
            </h4>,
            <span
              className="pull-right clickable"
            >
              <button
                className="btn btn-default"
                id="reload-button"
                onClick={[MockFunction]}
                type="button"
              >
                <span
                  className="glyphicon glyphicon-refresh"
                />
              </button>
              <button
                className="btn btn-default"
                id="remove-button"
                onClick={[MockFunction]}
                type="button"
              >
                <span
                  className="glyphicon glyphicon-remove"
                />
              </button>
            </span>,
            <span
              className="time-span pull-right"
              id="last-fetched-span"
              style={
                Object {
                  "marginRight": "5px",
                }
              }
            >
              Last fetched : 00:00:00
            </span>,
            <span
              className="info-span pull-right"
              id="new-post-span"
            >
              
            </span>,
          ],
          "className": "panel-heading",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <a
                id="title-a"
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                
              </a>,
              "className": "panel-title",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "id": "title-a",
                "onClick": [Function],
                "style": Object {
                  "cursor": "pointer",
                },
              },
              "ref": null,
              "rendered": "",
              "type": "a",
            },
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="btn btn-default"
                  id="reload-button"
                  onClick={[MockFunction]}
                  type="button"
                >
                  <span
                    className="glyphicon glyphicon-refresh"
                  />
                </button>,
                <button
                  className="btn btn-default"
                  id="remove-button"
                  onClick={[MockFunction]}
                  type="button"
                >
                  <span
                    className="glyphicon glyphicon-remove"
                  />
                </button>,
              ],
              "className": "pull-right clickable",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="glyphicon glyphicon-refresh"
                  />,
                  "className": "btn btn-default",
                  "id": "reload-button",
                  "onClick": [MockFunction],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "glyphicon glyphicon-refresh",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="glyphicon glyphicon-remove"
                  />,
                  "className": "btn btn-default",
                  "id": "remove-button",
                  "onClick": [MockFunction],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "glyphicon glyphicon-remove",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                "type": "button",
              },
            ],
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Last fetched : 00:00:00",
              "className": "time-span pull-right",
              "id": "last-fetched-span",
              "style": Object {
                "marginRight": "5px",
              },
            },
            "ref": null,
            "rendered": "Last fetched : 00:00:00",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "info-span pull-right",
              "id": "new-post-span",
            },
            "ref": null,
            "rendered": "",
            "type": "span",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="panel-body"
            id="posts-div"
          />,
          "className": "panel-collapse collapse ",
          "id": "collapse-div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "panel-body",
            "id": "posts-div",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="panel-heading"
          >
            <h4
              className="panel-title"
            >
              <a
                id="title-a"
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                
              </a>
            </h4>
            <span
              className="pull-right clickable"
            >
              <button
                className="btn btn-default"
                id="reload-button"
                onClick={[MockFunction]}
                type="button"
              >
                <span
                  className="glyphicon glyphicon-refresh"
                />
              </button>
              <button
                className="btn btn-default"
                id="remove-button"
                onClick={[MockFunction]}
                type="button"
              >
                <span
                  className="glyphicon glyphicon-remove"
                />
              </button>
            </span>
            <span
              className="time-span pull-right"
              id="last-fetched-span"
              style={
                Object {
                  "marginRight": "5px",
                }
              }
            >
              Last fetched : 00:00:00
            </span>
            <span
              className="info-span pull-right"
              id="new-post-span"
            >
              
            </span>
          </div>,
          <div
            className="panel-collapse collapse "
            id="collapse-div"
          >
            <div
              className="panel-body"
              id="posts-div"
            />
          </div>,
        ],
        "className": "panel panel-default",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4
                className="panel-title"
              >
                <a
                  id="title-a"
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  
                </a>
              </h4>,
              <span
                className="pull-right clickable"
              >
                <button
                  className="btn btn-default"
                  id="reload-button"
                  onClick={[MockFunction]}
                  type="button"
                >
                  <span
                    className="glyphicon glyphicon-refresh"
                  />
                </button>
                <button
                  className="btn btn-default"
                  id="remove-button"
                  onClick={[MockFunction]}
                  type="button"
                >
                  <span
                    className="glyphicon glyphicon-remove"
                  />
                </button>
              </span>,
              <span
                className="time-span pull-right"
                id="last-fetched-span"
                style={
                  Object {
                    "marginRight": "5px",
                  }
                }
              >
                Last fetched : 00:00:00
              </span>,
              <span
                className="info-span pull-right"
                id="new-post-span"
              >
                
              </span>,
            ],
            "className": "panel-heading",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <a
                  id="title-a"
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  
                </a>,
                "className": "panel-title",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "",
                  "id": "title-a",
                  "onClick": [Function],
                  "style": Object {
                    "cursor": "pointer",
                  },
                },
                "ref": null,
                "rendered": "",
                "type": "a",
              },
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="btn btn-default"
                    id="reload-button"
                    onClick={[MockFunction]}
                    type="button"
                  >
                    <span
                      className="glyphicon glyphicon-refresh"
                    />
                  </button>,
                  <button
                    className="btn btn-default"
                    id="remove-button"
                    onClick={[MockFunction]}
                    type="button"
                  >
                    <span
                      className="glyphicon glyphicon-remove"
                    />
                  </button>,
                ],
                "className": "pull-right clickable",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      className="glyphicon glyphicon-refresh"
                    />,
                    "className": "btn btn-default",
                    "id": "reload-button",
                    "onClick": [MockFunction],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "glyphicon glyphicon-refresh",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      className="glyphicon glyphicon-remove"
                    />,
                    "className": "btn btn-default",
                    "id": "remove-button",
                    "onClick": [MockFunction],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "glyphicon glyphicon-remove",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  "type": "button",
                },
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Last fetched : 00:00:00",
                "className": "time-span pull-right",
                "id": "last-fetched-span",
                "style": Object {
                  "marginRight": "5px",
                },
              },
              "ref": null,
              "rendered": "Last fetched : 00:00:00",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "className": "info-span pull-right",
                "id": "new-post-span",
              },
              "ref": null,
              "rendered": "",
              "type": "span",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="panel-body"
              id="posts-div"
            />,
            "className": "panel-collapse collapse ",
            "id": "collapse-div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "className": "panel-body",
              "id": "posts-div",
            },
            "ref": null,
            "rendered": Array [],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
